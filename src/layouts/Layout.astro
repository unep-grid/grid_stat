---
interface Props {
  title: string;
}

const { title } = Astro.props;
import '@/styles/globals.css';
import { LanguageProvider } from '@/components/layout/LanguageProvider';
import { ViewTransitions } from 'astro:transitions';
const base = import.meta.env.BASE_URL;
---

<!doctype html>
<html lang="en">
  <head transition:name="root" transition:animate="fade">
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="UNEP-GRID Data Platform for global sustainability and disaster risk reduction indicators"
    />
    <meta name="viewport" content="width=device-width" />
    <ViewTransitions />
    <link rel="icon" type="image/svg+xml" href={base + "/favicon.svg"} />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <LanguageProvider client:load>
      <slot />
    </LanguageProvider>
    <script is:inline>
      const setDarkMode = (document) => {
        const theme = localStorage.getItem('class_theme');
        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      };

      // Set initial theme
      setDarkMode(document);

      // Handle theme changes during navigation
      document.addEventListener("astro:before-swap", (event) => {
        setDarkMode(event.newDocument);
      });
    </script>
  </body>
</html>
